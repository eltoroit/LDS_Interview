<aura:component implements="force:hasRecordId">
    <aura:attribute name="fields" type="String[]" default="['Id']" />
    <aura:attribute name="targetRecord" type="Object" />
    <aura:attribute name="targetFields" type="Object" />
    <aura:attribute name="targetError" type="Object" />

    <aura:attribute name="valOperation" type="String" default="VIEW" />
    <aura:attribute name="optsOperation" type="List" default="[
        {label: 'View', value: 'VIEW'},
        {label: 'Edit', value: 'EDIT'}
    ]" />

    <aura:attribute name="valFields" type="String" default="FULL" />
    <aura:attribute name="optsFields" type="List" default="[
        {label: 'Full', value: 'FULL'},
        {label: 'Compact', value: 'COMPACT'},
        {label: 'Fields Only', value: '_Fields'}, 
        {label: 'Full + Fields', value: 'FULL_Fields'},
        {label: 'Compact + Fields', value: 'COMPACT_Fields'}
    ]" />

    <aura:handler name="init" value="{!this}" action="{!c.makeComponent}" />

    <force:recordData aura:id="F_RecordData" recordId="{!v.recordId}" layoutType="" fields="{!v.fields}"
        mode="VIEW" targetRecord="{!v.targetRecord}" targetFields="{!v.targetFields}" targetError="{!v.targetError}"
        recordUpdated="{!c.recordUpdated}" />

    <aura:if isTrue="{!not(empty(v.targetError))}">
        <lightning:layout horizontalAlign="center">
            <lightning:layoutItem padding="horizontal-large">
                <lightning:card variant="narrow" class="errorCard">
                    <aura:set attribute="title">
                        <lightning:icon iconName="utility:error" alternativeText="Error!" variant="error" size="small" /> Error Loading Data
                    </aura:set>
                    <div class="slds-m-horizontal_large">
                        {!v.targetError}
                    </div>
                </lightning:card>
            </lightning:layoutItem>
        </lightning:layout>
    </aura:if>

    <lightning:layout multipleRows="true">
        <lightning:layoutItem padding="around-medium">
            <lightning:radioGroup name="Operation" label="Operation" options="{!v.optsOperation}" value="{!v.valOperation}"
                onchange="{!c.makeComponent}" type="button" />
        </lightning:layoutItem>
        <lightning:layoutItem padding="around-medium">
            <lightning:radioGroup name="Fields" label="Fields" options="{!v.optsFields}" value="{!v.valFields}" onchange="{!c.makeComponent}"
                type="button" />
        </lightning:layoutItem>
        <lightning:layoutItem padding="around-medium">
            <legend class="slds-form-element__legend slds-form-element__label">Operation</legend>
            <lightning:buttonGroup>
                <lightning:button label="New" onclick="{!c.new}" />
                <lightning:button label="Save" onclick="{!c.save}" />
                <lightning:button label="Reload" onclick="{!c.reload}" />
                <lightning:button label="Delete" onclick="{!c.delete}" />
            </lightning:buttonGroup>
        </lightning:layoutItem>
    </lightning:layout>


    <table>
        <tr>
            <th>targetFields</th>
            <td>{!v.targetFields.Name}</td>
        </tr>
        <tr>
            <th>targetRecord</th>
            <td>{!v.targetRecord.fields.Name.value}</td>
        </tr>
    </table>
</aura:component>

<!--

    
=== METHODS ===
https://inspiration-dream-3366-dev-ed.lightning.force.com/docs/component-library/bundle/force:recordData/specification
https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/data_service_delete_record.htm?search_text=force:recordData
getNewRecord:
 Loads a record template and sets it to the targetRecord attribute, including predefined values for the object and record type.
reloadRecord:
 Performs the same load function as on init using the current configuration values (recordId, layoutType, mode, and others). Doesnâ€™t force a server trip unless required.
saveRecord:
 Saves the record.
deleteRecord:
 Deletes the record.

=== EVENTS ===
recordUpdated	COMPONENT	Event fired when the record has changed.
-->